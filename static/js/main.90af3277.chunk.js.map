{"version":3,"sources":["Quote.js","Todos.js","uselocalstorage.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","useState","quote","setQuote","useEffect","a","fetch","then","res","json","data","Math","floor","random","length","getQuote","className","text","author","Todos","forwardRef","todo","setTodo","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","todos","setTodos","deleteTodo","e","preventDefault","newTodos","filter","onChange","target","type","placeholder","IconButton","aria-label","onClick","v4","complete","map","i","Fragment","style","color","forEach","completeTodo","editTodo","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90af3277.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./Quote.css\";\r\nfunction Quote() {\r\n  const [quote, setQuote] = useState({});\r\n  useEffect(() => {\r\n    const getQuote = async () => {\r\n      await fetch(\"https://type.fit/api/quotes\")\r\n        .then((res) => res.json())\r\n        .then((data) =>\r\n          setQuote(data[Math.floor(Math.random() * (data.length - 1))])\r\n        );\r\n    };\r\n    getQuote();\r\n  }, []);\r\n  return (\r\n    <div className=\"quote\">\r\n      <i className=\"quote__text\">{quote.text}</i>\r\n      <p className=\"quote__author\">{quote.author}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quote;\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport React, { forwardRef, useState, useEffect } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport \"./Todos.css\";\r\nimport { v4 } from \"uuid\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport useLocalStorage from \"./uselocalstorage\";\r\n\r\nconst Todos = forwardRef(() => {\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [todos, setTodos] = useLocalStorage(\"todos\", []);\r\n  useEffect(() => {\r\n    const addLocal = () => {\r\n      if (todos.length > 0) {\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n      }\r\n    };\r\n    addLocal();\r\n  }, [todos]);\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (todo.length === 0) return;\r\n    setTodos([...todos, { text: todo, key: v4(), complete: false }]);\r\n    setTodo(\"\");\r\n  };\r\n  const deleteTodo = (e, key) => {\r\n    e.preventDefault();\r\n    let newTodos = todos.filter((todo) => todo.key !== key);\r\n    setTodos(newTodos);\r\n  };\r\n  const editTodo = (e, key) => {\r\n    e.preventDefault();\r\n    todos.forEach((todo) => {\r\n      if (todo.key === key) {\r\n        setTodo(todo.text);\r\n      }\r\n    });\r\n    let newTodos = todos.filter((todo) => todo.key !== key);\r\n    setTodos(newTodos);\r\n  };\r\n  const completeTodo = (e, key) => {\r\n    e.preventDefault();\r\n    todos.forEach((todo) => {\r\n      if (todo.key === key) {\r\n        todo.complete = true;\r\n      }\r\n    });\r\n    setTodos([...todos]);\r\n  };\r\n  return (\r\n    <div className=\"todos\">\r\n      <form>\r\n        <input\r\n          value={todo}\r\n          onChange={(e) => setTodo(e.target.value)}\r\n          type=\"text\"\r\n          className=\"todos__input\"\r\n          placeholder=\"Enter Todo\"\r\n        />\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          type=\"submit\"\r\n          className=\"todos__button\"\r\n          onClick={handelSubmit}\r\n        >\r\n          <AddIcon />\r\n        </IconButton>\r\n      </form>\r\n      <h2 className=\"todos__list--header\">Todos</h2>\r\n      <div className=\"todos__list\">\r\n        <FlipMove>\r\n          {todos.map((todo, i) => (\r\n            <div className=\"todo\">\r\n              {todo.complete === true ? (\r\n                <React.Fragment>\r\n                  <h3 className=\"todo__title--complete\">{todo.text}</h3>\r\n                  <IconButton\r\n                    aria-label=\"add\"\r\n                    type=\"submit\"\r\n                    onClick={(e) => deleteTodo(e, todo.key)}\r\n                    style={{ color: \"green\" }}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </React.Fragment>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <h3 className=\"todo__title\">{todo.text}</h3>\r\n                  <div className=\"todo__icons\">\r\n                    <IconButton\r\n                      aria-label=\"add\"\r\n                      type=\"submit\"\r\n                      onClick={(e) => completeTodo(e, todo.key)}\r\n                    >\r\n                      <DoneIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton\r\n                      aria-label=\"edit\"\r\n                      type=\"button\"\r\n                      onClick={(e) => editTodo(e, todo.key)}\r\n                    >\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      aria-label=\"add\"\r\n                      type=\"submit\"\r\n                      onClick={(e) => deleteTodo(e, todo.key)}\r\n                      style={{ color: \"red\" }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </FlipMove>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Todos;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","import \"./App.css\";\nimport Quote from \"./Quote\";\nimport Todos from \"./Todos\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Quote />\n      <Todos />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}